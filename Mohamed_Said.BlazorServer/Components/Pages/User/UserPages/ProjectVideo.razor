@page "/{ProjectTitle}/Videos"
@layout NoLayout
@inject IProjectService projectService
@inject NavigationManager navigationManager
@if (projectVideoDtos is not null && projectVideoDtos.Any())
{
    <!-- Video Modal/Overlay -->
    <div class="fixed left-0 top-0 w-full h-full bg-black/90 z-50 flex items-center justify-center transition-all duration-300">

        <!-- Close Button -->
        <button id="closeVideoModal" @onclick="CloseVideo"
                class="absolute top-3 right-3 text-white/80 hover:text-white transition-colors duration-300">
            <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
        </button>

        <!-- Modal Content -->
        <div class="w-full max-w-5xl px-4">
            @if (currentVideo is not null)
            {
                <!-- Video Title -->
                <h3 id="videoTitle" class="text-white text-lg font-semibold mb-4 text-center md:text-xl">
                    @(currentVideo.Title ?? "Video Title")
                </h3>

                <!-- Video Container -->
                <div class="aspect-video bg-black rounded-lg overflow-hidden">
                    <iframe class="w-full h-full"
                            src=" @(currentVideo.VideoUrl)"
                            frameborder="0"
                            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                            allowfullscreen>
                    </iframe>
                </div>
            }
        </div>

        <!-- Navigation Arrows -->
        <button @onclick="PreviousVideo" disabled="@(currentIndex == 0 ? true : false )"
                class="absolute top-1/2 -left-1 xl:left-12
                    text-white/80 hover:text-white transition-colors duration-300
                    disabled:opacity-30 disabled:cursor-not-allowed">
            <svg class="w-10 h-10" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
        </button>

        <button @onclick="NextVideo" disabled="@(currentIndex == projectVideoDtos.Count-1 ? true : false )"
                class="absolute top-1/2 -right-1 xl:right-12
                    text-white/80 hover:text-white transition-colors duration-300
                    disabled:opacity-30 disabled:cursor-not-allowed">
            <svg class="w-10 h-10" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
        </button>
    </div>
}

@code {
    private ProjectDto? projectDto;
    private List<ProjectVideoDto>? projectVideoDtos;
    private ProjectVideoDto? currentVideo;
    private int currentIndex = 0;


    [Parameter]
    public string? ProjectTitle { get; set; }



    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(ProjectTitle))
        {
            projectDto = await projectService.GetByTitleAsync(ProjectTitle);
            if (projectDto is not null && projectDto.ProjectVideos is not null && projectDto.ProjectVideos.Any())
            {
                projectVideoDtos = projectDto.ProjectVideos.ToList();
                currentVideo = projectVideoDtos.FirstOrDefault();
                currentIndex = 0;
                
            }
            else
            {
                // If the project is not found, navigate to the NotFound page
                navigationManager.NavigateTo("/NotFound");
                return; // Exit early if the project is not found
            }
        }
        else
        {
            navigationManager.NavigateTo("/NotFound");
            return; // Exit early if the ProjectTitle is null or empty
        }

    }

    private void NextVideo()
    {
        if (projectVideoDtos is not null && currentIndex < projectVideoDtos.Count - 1)
        {
            currentIndex++;
            currentVideo = projectVideoDtos[currentIndex];
        }
    }

    private void PreviousVideo()
    {
        if (projectVideoDtos is not null && currentIndex > 0)
        {
            currentIndex--;
            currentVideo = projectVideoDtos[currentIndex];
        }
    }

    private void CloseVideo()
    {
        currentVideo = null;
        currentIndex = 0;
        navigationManager.NavigateTo("/",true);
        return;
    }


}
