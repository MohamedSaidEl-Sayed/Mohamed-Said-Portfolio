@if(ProjectDto is not null)
{
    <!-- Project Card -->
    <div class="bg-white dark:bg-dark-secondary rounded-xl overflow-hidden shadow-lg
                border border-gray-100 dark:border-gray-800
                transition-all duration-300 hover:-translate-y-1 hover:shadow-xl">

        <!-- Project Image -->
        <div class="relative aspect-video overflow-hidden">
            <img src="@ProjectDto.FeaturedImageUrl"
                 alt="@ProjectDto.Title"
                 class="w-full h-full object-cover" />
        </div>
        <!-- Content Container -->
        <div class="p-6 space-y-4">
            <!-- Title & Description -->
            <div class="space-y-2">
                <h3 class="text-xl font-semibold text-gray-800 dark:text-white transition-colors duration-300">
                    @(ProjectDto.Title ?? "Project Name")
                </h3>
                <p class="text-sm text-gray-600 dark:text-gray-300 line-clamp-2 transition-colors duration-300">
                    @(ProjectDto.Description ?? "Project Description")
                </p>
            </div>

            @if(ProjectDto.ProjectSkills is not null && ProjectDto.ProjectSkills.Any())
            {
                <!-- Technologies Used -->
                <div class="space-y-2">
                    <p class="text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider transition-colors duration-300">
                        Technologies Used
                    </p>
                    <div class="flex flex-wrap gap-2">
                        @foreach(ProjectSkillDto projectSkill in ProjectDto.ProjectSkills)
                        {
                            <span class="px-3 py-1 text-xs rounded-full
                                    @(projectSkill?.Skill?.BackgroundLightColor) @(projectSkill?.Skill?.TextLightColor)
                                    dark:@(projectSkill?.Skill?.BackgroundDarkColor) dark:@(projectSkill?.Skill?.TextDarkColor)
                                        transition-all duration-300">
                                @(projectSkill?.Skill?.Name ?? "skill")
                            </span>
                        }
                    </div>
                </div>

            }
            
            <!-- Action Buttons -->
            <div class="pt-4 flex gap-2 flex-wrap border-t border-gray-200 dark:border-gray-700 transition-colors duration-300">
                @if(ProjectDto.ProjectVideos is not null && ProjectDto.ProjectVideos.Any())
                {
                    <!-- Demo Video Button -->
                    <button @onclick="() => showVideo = true"
                        class="px-4 py-2 text-sm rounded-lg
                                bg-gray-100 text-gray-700
                                dark:bg-gray-700 dark:text-gray-300
                                hover:bg-gray-200 dark:hover:bg-gray-600
                                transition-colors duration-300
                                flex items-center gap-2 cursor-pointer">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                  d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                  d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                        Video
                    </button>
                }

                @if (!string.IsNullOrEmpty(ProjectDto.ProjectUrl))
                {
                    <!-- Live Demo Button -->
                    <a href="@(ProjectDto.ProjectUrl)" target="_blank"
                        class="px-4 py-2 text-sm rounded-lg
                            bg-gray-100 text-gray-700
                            dark:bg-gray-700 dark:text-gray-300
                            hover:bg-gray-200 dark:hover:bg-gray-600
                            transition-colors duration-300
                            flex items-center gap-2">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"
                             xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                  d="M18 13v5a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h5m4-3h6m0 0v6m0-6L10 14" />
                        </svg>
                        Demo
                    </a>
                }

                @if (!string.IsNullOrEmpty(ProjectDto.RepoUrl))
                {
                    <!-- Repo Button -->
                    <a href="@(ProjectDto.RepoUrl)" target="_blank"
                        class="px-4 py-2 text-sm rounded-lg
                            bg-gray-100 text-gray-700
                            dark:bg-gray-700 dark:text-gray-300
                            hover:bg-gray-200 dark:hover:bg-gray-600
                            transition-colors duration-300
                            flex items-center gap-2">
                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                            <path fill-rule="evenodd" clip-rule="evenodd"
                                  d="M12 2C6.48 2 2 6.48 2 12c0 4.418 2.865 8.167 6.839 9.489.5.092.682-.217.682-.483 0-.237-.009-.868-.014-1.703-2.782.603-3.369-1.342-3.369-1.342-.454-1.152-1.11-1.46-1.11-1.46-.908-.62.069-.608.069-.608 1.004.07 1.532 1.033 1.532 1.033.892 1.529 2.34 1.088 2.91.832.092-.648.35-1.089.636-1.338-2.22-.253-4.555-1.111-4.555-4.945 0-1.092.39-1.985 1.03-2.684-.104-.254-.447-1.27.098-2.648 0 0 .84-.268 2.75 1.026a9.564 9.564 0 015.002 0c1.909-1.294 2.748-1.026 2.748-1.026.546 1.378.203 2.394.1 2.648.64.699 1.03 1.592 1.03 2.684 0 3.842-2.337 4.692-4.566 4.944.359.31.679.919.679 1.852 0 1.337-.012 2.416-.012 2.743 0 .268.18.577.688.48A10.001 10.001 0 0022 12c0-5.52-4.48-10-10-10z" />
                        </svg>
                        Repo
                    </a>

                }
                @if(ProjectDto.ProjectImages is not null && ProjectDto.ProjectImages.Any())
                {
                    <!-- Gallery Button -->
                    <button @onclick="() => showImage = true"
                            class="px-4 py-2 text-sm rounded-lg
                            bg-gray-100 text-gray-700
                            dark:bg-gray-700 dark:text-gray-300
                            hover:bg-gray-200 dark:hover:bg-gray-600
                            transition-colors duration-300
                                    flex items-center gap-2 cursor-pointer">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                  d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                        </svg>
                        Gallery
                    </button>
                }
                @if (!string.IsNullOrEmpty(ProjectDto.DatabaseDesignUrl))
                {
                    <!-- Database Design Button -->
                    <a href="@(ProjectDto.DatabaseDesignUrl)" target="_blank"
                        class="px-4 py-2 text-sm rounded-lg
                                bg-gray-100 text-gray-700
                                dark:bg-gray-700 dark:text-gray-300
                                hover:bg-gray-200 dark:hover:bg-gray-600
                                        transition-colors duration-300
                                flex items-center gap-2">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <!-- Top Table -->
                            <rect x="7" y="2" width="10" height="6" rx="1" ry="1" stroke-width="2" />
                            <line x1="7" y1="4" x2="17" y2="4" stroke-width="1.5" /> <!-- header line -->
                            <line x1="7" y1="5.5" x2="17" y2="5.5" stroke-width="1" /> <!-- row -->
                            <!-- PK icon -->
                            <path d="M8.5 3.5l1 1 1-1-1-1-1 1z" stroke-width="1" /> <!-- small diamond PK -->
                            <!-- Bottom Left Table -->
                            <rect x="2" y="16" width="8" height="6" rx="1" ry="1" stroke-width="2" />
                            <line x1="2" y1="18" x2="10" y2="18" stroke-width="1.5" /> <!-- header -->
                            <line x1="2" y1="19.5" x2="10" y2="19.5" stroke-width="1" /> <!-- row -->
                            <!-- FK icon -->
                            <circle cx="3.5" cy="17" r="0.8" stroke-width="1" /> <!-- small circle FK -->
                            <!-- Bottom Right Table -->
                            <rect x="14" y="16" width="8" height="6" rx="1" ry="1" stroke-width="2" />
                            <line x1="14" y1="18" x2="22" y2="18" stroke-width="1.5" /> <!-- header -->
                            <line x1="14" y1="19.5" x2="22" y2="19.5" stroke-width="1" /> <!-- row -->
                            <!-- FK icon -->
                            <circle cx="15.5" cy="17" r="0.8" stroke-width="1" /> <!-- small circle FK -->
                            <!-- Connectors -->
                            <line x1="12" y1="8" x2="12" y2="12" stroke-width="2" /> <!-- from top table -->
                            <line x1="6" y1="16" x2="6" y2="12" stroke-width="2" /> <!-- to left child -->
                            <line x1="18" y1="16" x2="18" y2="12" stroke-width="2" /> <!-- to right child -->
                            <line x1="6" y1="12" x2="18" y2="12" stroke-width="2" /> <!-- horizontal link -->
                        </svg>
                        Database Design
                    </a>
                }
                
            </div>
        </div>
    </div>

    @if(ProjectDto.ProjectVideos is not null && ProjectDto.ProjectVideos.Any())
    {
        <VideoModal ProjectVideoDtos="projectVideoDtos" ShowVideo="showVideo" CloseVideoModal="CloseVideoModal"/>
    }

    @if (ProjectDto.ProjectImages is not null && ProjectDto.ProjectImages.Any())
    {
        <GalleryModal ProjectImageDtos="projectImageDtos" ShowImage="showImage" CloseImageModal="CloseImageModal" />
    }
}

@code {
    [Parameter]
    public ProjectDto? ProjectDto { get; set; }
    private List<ProjectVideoDto> projectVideoDtos = new List<ProjectVideoDto>();
    private List<ProjectImageDto> projectImageDtos = new List<ProjectImageDto>(); 
    private bool showVideo = false;
    private bool showImage = false;

    protected override void OnInitialized()
    {
        if (ProjectDto is not null)
        {
            if (ProjectDto.ProjectVideos is not null && ProjectDto.ProjectVideos.Any())
                projectVideoDtos = ProjectDto.ProjectVideos.OrderBy(v => v.DisplayOrder).ToList();

            if (ProjectDto.ProjectImages is not null && ProjectDto.ProjectImages.Any())
                projectImageDtos = ProjectDto.ProjectImages.OrderBy(i => i.DisplayOrder).ToList();

            if (ProjectDto.ProjectSkills is not null && ProjectDto.ProjectSkills.Any())
                ProjectDto.ProjectSkills = ProjectDto.ProjectSkills.OrderBy(ps => ps.DisplayOrder);
        }
        base.OnInitialized();
    }

  

    private void CloseVideoModal()
    {
        showVideo = false;
    }

    private void CloseImageModal()
    {
        showImage = false;
    }
}
