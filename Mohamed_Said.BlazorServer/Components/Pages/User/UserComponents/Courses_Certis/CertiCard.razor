
@if(Certification is not null)
{
    <div class="group bg-white dark:bg-dark-primary rounded-2xl p-6
                        border border-gray-100 dark:border-gray-800
                        hover:shadow-xl transition-all duration-300
                        hover:-translate-y-1">

        <!-- Status -->
        <div class="flex items-center gap-2 mb-2">
            @if (Certification.Status == CourseStatus.Completed)
            {
                <span class="px-3 py-1 text-sm rounded-full bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200 transition-colors duration-300">
                    ✅ Completed
                </span>
            }
            else if (Certification.Status == CourseStatus.InProgress)
            {
                <span class="px-3 py-1 text-sm rounded-full bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200 transition-colors duration-300">
                    ⏳ In Progress
                </span>
            }
            
        </div>

        <!-- Certificate Title -->
        <h3 class="text-xl font-semibold mb-2 text-gray-800 dark:text-white group-hover:text-brand-blue transition-colors duration-300">
            @(Certification.Title ?? "Certification Title")
        </h3>

        <!-- Certificate Description -->
        <p class="text-sm text-gray-600 dark:text-gray-300 mb-4 line-clamp-2 transition-colors duration-300">
            @(Certification.Description ?? "This is a brief description of the course. It covers various topics and provides in-depth knowledge.")
        </p>


        @if (Certification.CertificationSkills is not null && Certification.CertificationSkills.Any())
        {
            <!-- Skills Learned -->
            <div class="mb-6">
                <h4 class="text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider mb-2 transition-colors duration-300">Skills Covered</h4>
                <div class="flex flex-wrap gap-2">
                    @foreach (CertificationSkillDto certificationSkill in Certification.CertificationSkills)
                    {
                        <span class="px-2 py-1 text-xs rounded-full @(certificationSkill?.Skill?.BackgroundLightColor)
                                                                   dark:@(certificationSkill?.Skill?.BackgroundDarkColor)
                                                                    @(certificationSkill?.Skill?.TextLightColor)
                                                                    dark:@(certificationSkill?.Skill?.TextDarkColor)
                                                                    transition-colors duration-300"> HTML5</span>
                    }
                </div>
            </div>
        }
       
        <!-- Links -->
        <div class="flex items-center justify-between flex-wrap pt-4 border-t border-gray-200 dark:border-gray-700 transition-colors duration-300">
            <a href="@Certification.CredentialUrl" class="text-sm font-medium text-brand-blue hover:text-brand-blue/80 flex items-center gap-1 transition-colors duration-300">
                View Credential
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                </svg>
            </a>
            <div class="flex items-center gap-1 text-green-600 dark:text-green-400 transition-colors duration-300">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                <span class="text-xs font-medium">Verified</span>
            </div>
        </div>
    </div>

}

@code {
    [Parameter]
    public CertificationDto? Certification { get; set; } = new CertificationDto();
    protected override void OnInitialized()
    {
        if (Certification is not null)
        {
            if (Certification.CertificationSkills is not null && Certification.CertificationSkills.Any())
                Certification.CertificationSkills = Certification.CertificationSkills.OrderBy(ps => ps.DisplayOrder).ToList();
        }

        base.OnInitialized();
    }
}
