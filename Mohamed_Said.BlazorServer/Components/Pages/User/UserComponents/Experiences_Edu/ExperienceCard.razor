
@if(Experience is not null){
    <!-- Experience Item -->
    <div class="relative flex flex-col md:flex-row items-center md:justify-between group">
        <!-- Timeline Dot -->
        <div class="absolute left-4 md:left-1/2 transform md:-translate-x-1/2 w-4 h-4 rounded-full bg-brand-blue
                                    border-4 border-light-primary dark:border-dark-primary transition-all duration-300
                                    group-hover:scale-125 group-hover:bg-brand-green"></div>

        <!-- Left Content (Date) -->
        <div class="w-full md:w-[calc(50%-2rem)] md:text-right mb-4 md:mb-0 pl-12 md:pl-0 md:pr-8">
            <span class="inline-block px-4 py-2 rounded-full bg-brand-blue/10 dark:bg-brand-blue/20
                                    text-brand-blue dark:text-brand-blue font-semibold text-sm">
                @(Experience.StartDate.ToString("yyyy MMMM")) - @(Experience.IsCurrent ? "Present" : Experience.EndDate?.ToString("yyyy MMMM"))
            </span>
        </div>

        <!-- Right Content (Details) -->
        <div class="w-full md:w-[calc(50%-2rem)] pl-12 md:pl-8">
            <div class="bg-white dark:bg-dark-secondary rounded-xl p-6
                                        border border-gray-100 dark:border-gray-800
                                        transform transition-all duration-300
                                        hover:-translate-y-1 hover:shadow-xl">
                <h3 class="text-xl font-semibold text-gray-800 dark:text-white mb-2 transition-colors duration-300">
                    @(Experience.JobTitle)
                </h3>
                <div class="flex flex-wrap justify-between items-center gap-1 mb-3">
                    <p class="text-light-text-secondary dark:text-dark-text-secondary transition-colors duration-300">
                        @(Experience.CompanyName)
                    </p>
                    <span class="px-3 py-1 text-xs rounded-md bg-brand-blue/10 text-brand-blue">
                        @(Experience.JobType)
                    </span>
                </div>

                <ul class="space-y-2 text-sm text-gray-600 dark:text-gray-300 transition-colors duration-300">
                    <li class="flex items-start">
                        <svg class="w-5 h-5 text-brand-blue mr-2 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                        </svg>
                        @(Experience.Description)
                    </li>
                    @* <li class="flex items-start">
                        <svg class="w-5 h-5 text-brand-blue mr-2 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                        </svg>
                        Implemented microservices architecture serving 1M+ users
                    </li> *@
                </ul>
                <!-- Skills Tags -->
                @if(Experience.ExperienceSkills is not null && Experience.ExperienceSkills.Any())
                {
                    <div class="mt-4 flex flex-wrap gap-2">
                        @foreach(ExperienceSkillDto experienceSkill in Experience.ExperienceSkills)
                        {
                            <span class="px-3 py-1 text-xs rounded-full @(experienceSkill?.Skill?.BackgroundLightColor)
                                                                        dark:@(experienceSkill?.Skill?.BackgroundDarkColor)
                                                                        @(experienceSkill?.Skill?.TextLightColor)
                                                                        dark:@(experienceSkill?.Skill?.TextDarkColor)
                                                                        transition-colors duration-300">
                                @(experienceSkill?.Skill?.Name ?? "Skill")
                            </span>
                        }
                    </div>
                }
                
            </div>
        </div>
    </div>
}


@code {
    [Parameter]
    public ExperienceDto Experience { get; set; } = new ExperienceDto();
}
